
1. Чем отличается микроконтроллер от микропроцессора?
Отличается тем, что память контроллера, его ядро и периферия находятся на одном кристалле, в отличие от процессора, память которого находится вне его
2. Какие тактовые частоты могут быть у ATmega8535?
От 0 до 16 МГц 
3. Какие таймеры есть у ATmega8535?
Имеются два 8-ми разрядных таймера\счетчика Timer0,  Timer2 и 16-ти разрядный Timer1
4. Сколько всего прерываний у ATmega8535?
Всего имеется 21 прерывание, четыре из которых являются внешними и генерируют прерывание при поступлении на входы (INT0, INT1, INT2 и RESET). Остальные 17 прерываний являются внутренними и обслуживают дополнительные блоки. Прерывания по своей сути это прыжок на подпрограмму (отвлечение от выполнения основной ее части) в результате возникновения какого-либо обстоятельства, которое данная подпрограмма будет обрабатывать.
5. Как организована система приоритетов при обработке прерываний?
Все запросы поступают на блок обработки прерываний. Обнаружив запрос, блок определяет его номер, затем проверяет, разрешено оно или нет. Если разрешено, чувствительность ко всем другим запрещается (в 7-ой разряд регистра флагов записывается 0). Программный счетчик заносится в стек , а на его место его место в программный счетчик заносится адрес, приписанный данному прерыванию. Номера прерываний соответственно приведены в таблице векторов прерываний (стр.44). Если одновременно возникают несколько прерываний, то обрабатывается прерывание, имеющее наименьший номер. То есть в данном микроконтроллере реализована система прерываний с фиксированными приоритетами.
6. Как можно разрешить (запретить) одновременно все прерывания?
Общий запрет на прерывание будет объявлен при выставлении в ноль(«0») 7-го разряда регистра флагов SREG, разрешение при выставлении данного разряда в единицу «1».
7. Как можно разрешить(запретить) прерывания по переполнению таймера 0?
В разряде 1 регистра TIMSK должны стоять соответственно 1 или 0 (разрешить\запретить).
8. Внутренняя структура МК?
Процессор, ОЗУ, RAM(Random access memory)-память программ, порты ввода\вывода, блок управления питанием (источник питания), блок управления сбросом (reset), блок синхронизации (тактовые сигналы).
9. Таймер 0. Режимы работы, количество прерываний, регистры ввода\вывода, принадлежащие таймеру 0?
Timer0 имеет 4 режима работы: Normal, PWM Phase Correct, CTC, Fast PWM.
Прерывание по переполнению таймера Timer0_OVF (Timer0 OverFlow) и прерывание по достижению порога установленного в OCR0 (Timer_COMP).
3 собственных регистра TCCR0 (управляющий),TCNT0 (сам счетчик), OCR0 (порог на счетчик) и два общих с остальными двумя таймерами TIFR и TIMSK.
10. Написать программу с использованием таймера 0, вырабатывающую на выходе 0порта А симметричное прямоугольное колебание с периодом две миллисекунды.
---
11. Какой режим таймера0 позволяет вырабатывать треугольные колебания, используя дополнительную интегрирующую цепочку.
Режим 1 позволяет генерировать сигнал с широтно-импульсной модуляцией, таким образом, снимая его с выхода OC0, получим при пропускании сигала через интегрирующую цепь треугольное колебание.
12. Какие значения записаны в TCCR после сигнала RESET?
После Поступления сигнала RESET в регистре TCCR выставляются все нули, это приводит к остановки таймера, счета нет. 
13. Что такое SPI и зачем он нужен?
SPI – Serial Peripheral Interface – последовательный периферийный интерфейс, шина SPI. (Также, последовательный синхронный интерфейс). Предназначен для передачи данных с высокой скоростью между микроконтроллерами и различными внешними устройствами. От Мастера к Слейву: SCLK, MOSI, MISO, SS. Обслуживается тремя регистрами: SPDR (DATA REGISTER), SPCR (CONTROL REGISTER), SPSR (STATUS REGISTER).
14. Как инициировать передачу байта в SPI?
Сделаем соответствующие установки для регистров. В ???
15. Сколько прерываний и сколько регистров ввода \вывода принадлежит SPI?
Имеет одно прерывание – SPI передачу завершил.
Обслуживается тремя регистрами: SPDR (DATA REGISTER), SPCR (CONTROL REGISTER), SPSR (STATUS REGISTER).
16. Порт А. Сколько прерываний и сколько регистров ввода \вывода принадлежит порту А? Назначение этих регистров ввода\вывода.
    DDRA – регистр выбора направления передачи данных (если в разряде 0, то соответствующая нога есть вход, если в разряде записана 1, то соответствующая нога есть выход)
PORTA – регистр данных порта А. На его разрядах если и есть что то из единиц, то только там, где единицы установлены в DDRA.
PINA – можно только читать. 
17. Сторожевой таймер и особенность его работы.
Предназначен для ликвидации последствий сбоев в работе микроконтроллера, возникающих из-за различного рода помех. Смысл работы прост, таймер считает время, при этом через какое-то фиксированное время активирует RESET, что естественно ведет к перезапуску программы, при этом в самой программе имеются команды WDR (watch dog reset), которые в свою очередь обнуляют счетчик, не давая ему дойти до момента сброса, что говорит о том, что программа работает в штатном режиме, если есть сбой, то счетчик все же дойдет до значения сброса и сбросит программу, она перезагрузится.
18. Однопроводный интерфейс. Как выглядит физический ноль и физическая единица?
Физический ноль – это напряжение на ноге, все что ниже (0,4 вольт?) есть ноль физический, все что выше ? есть физическая единица. 
19. Как в однопроводном интерфейсе передается информационный ноль и информационная единица? Какова максимальная скорость передачи?
Максимальная скорость передачи – 15.4Кбит/c.
20. Что такое серийный номер и какова его структура?
Уникальный номер микроконтроллера, используемый для защиты программного кода микроконтроллера от незаконного копирования. Структура: номер партии + номер пластины + координаты кристалла микроконтроллера на пластине.
21. Какая команда позволяет Master определить номера всех Slave в сети?
SPSR – считать, то есть с регистра статуса можно считать информацию, после Reset там все нули.
22. Как выглядит сигнал сброса в сети MicroLAN?
Логическая единица на >480мкс.
23. Почему после сигнала RESET все остальные прерывания запрещены?
После RESET в регистре SREG (регистре флагов) 7 разряд обнуляется, что говорит о запрете всех прерываний!

24. Приведите пример использования разряда Т в регистре SREG.
T предназначен для временного хранения бита.
BST – записать
BLD – считать
25. Как запрограммировать предварительный делитель таймера 0?
В регистре TCCR0 выставить 3 младших разряда как показано в книге на 52 странице.
26. Чем сигнальный процессор отличается от МК?
Сигнальный процессор – это микропроцессор, предназначенный для цифровой обработки сигналов, тем самым очевидно, что это и есть процессор, встроенный в микроконтроллер.
27. Как организовать вложенные прерывания?
Вложенный цикл.
28. Когда меняется порог в режиме 3 таймера 0?
При записи в пороговый регистр OCR0 значения порога таймера получаем, что это значение не сразу запишется в этот регистр, а пройдет через некий регистр (буферный) и попадет в вышеупомянутый регистр порога только по достижении счетчика TCNT0 наивысшего значения $FF.
29. Зачем в программе необходимо устанавливать начальное значение StackPointer и чему это значение должно быть равно?

В программе для стека (его головы) нужно отводить место, далекое от адресов самой программы, это делается для того, чтобы в процессе работы и появления всяких прерываний стек не наезжал на основную программу, тем самым уничтожая ее.
Адрес рекомендуется $25F.
30. Режим 0 таймера 0.
Normal – счетчик работает как обычный суммирующий счетчик, по каждому импульсу тактового сигнала от предварительного делителя увеличивает свое содержимое на 1. При переходе через $FF возникает прерывание, затем сброс таймера и отсчет по новой, также имеет место прерывание по достижению порога, установленного в OCR0. 
31. Режим 1 таймера 0
Режим 1 предназначен для генерации сигналов с широтно-импульсной модуляцией. Изменение состояния счетчика происходит по каждому импульсу тактового сигнала от предварительного делителя увеличивает свое содержимое на 1. Полная аналогия с предыдущим примером, прерывания наступают аналогичным образом. При изменении OCR0 его будущее значение записывается в буфер и затем при достижении максимума на счетчике применяется уже в регистре порога.
32. Режим 2 таймера 0.
Режим счета по модулю, определяемого содержимым регистра OCR0. В режиме 2 в OCR0 значение записывается непосредственно. 
33. Режим 3 таймера 0.
Режим, аналогичный режиму 1, но при этом позволяющий генерировать высокочастотный ШИМ-сигнал, применяется в регулировании мощности, выпрямлении, цифроаналоговом преобразовании. Изменение состояния выхода происходит дважды: сначала при достижении счетчиком порога, затем при достижении счетчика максимума и его сброса в ноль.
34. Можно ли писать в TCNT0 без остановки счетчика?
Можно.
35. Как можно остановить счет в таймере 0?
Записать в последние 3 разряда регистра TCCR0 нули.
36. Система прерываний микроконтроллера ATmega8535?
Ранее упомянуто. Таблица на 44 странице. Приоритеты по номеру прерывания.

